<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Microbrewit.Api">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microbrewit.Api">
      <apidata name="Microbrewit.Api" group="namespace" />
      <elements>
        <element api="T:Microbrewit.Api.WebApiConfig" />
        <element api="T:Microbrewit.Api.WebApiApplication" />
        <element api="T:Microbrewit.Api.UnityResolver" />
      </elements>
    </api>
    <api id="T:Microbrewit.Api.UnityResolver">
      <apidata name="UnityResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Http.Dependencies.IDependencyResolver" ref="true" />
        <type api="T:System.Web.Http.Dependencies.IDependencyScope" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="F:Microbrewit.Api.UnityResolver.container" />
        <element api="M:Microbrewit.Api.UnityResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)" />
        <element api="M:Microbrewit.Api.UnityResolver.BeginScope" />
        <element api="M:Microbrewit.Api.UnityResolver.GetService(System.Type)" />
        <element api="M:Microbrewit.Api.UnityResolver.GetServices(System.Type)" />
        <element api="M:Microbrewit.Api.UnityResolver.Dispose" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.UnityResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="container">
          <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.UnityResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.UnityResolver.BeginScope">
      <apidata name="BeginScope" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Web.Http.Dependencies.IDependencyScope" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope">
          <type api="T:System.Web.Http.Dependencies.IDependencyResolver" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.UnityResolver" ref="true" />
      </containers>
    </api>
    <api id="F:Microbrewit.Api.UnityResolver.container">
      <apidata name="container" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.Practices.Unity.IUnityContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.UnityResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.UnityResolver.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.UnityResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.UnityResolver.GetService(System.Type)">
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)">
          <type api="T:System.Web.Http.Dependencies.IDependencyScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.UnityResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.UnityResolver.GetServices(System.Type)">
      <apidata name="GetServices" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)">
          <type api="T:System.Web.Http.Dependencies.IDependencyScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.UnityResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.WebApiApplication">
      <apidata name="WebApiApplication" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.HttpApplication" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.WebApiApplication.Application_Start" />
        <element api="M:Microbrewit.Api.WebApiApplication.#ctor" />
        <element api="M:System.Web.HttpApplication.CompleteRequest">
          <apidata name="CompleteRequest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnBeginRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnBeginRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnAuthenticateRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnAuthenticateRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostAuthenticateRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostAuthenticateRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnAuthorizeRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnAuthorizeRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostAuthorizeRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostAuthorizeRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnResolveRequestCacheAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnResolveRequestCacheAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostResolveRequestCacheAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostResolveRequestCacheAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnMapRequestHandlerAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnMapRequestHandlerAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostMapRequestHandlerAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostMapRequestHandlerAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnAcquireRequestStateAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnAcquireRequestStateAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostAcquireRequestStateAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostAcquireRequestStateAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPreRequestHandlerExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPreRequestHandlerExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostRequestHandlerExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostRequestHandlerExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnReleaseRequestStateAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnReleaseRequestStateAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostReleaseRequestStateAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostReleaseRequestStateAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnUpdateRequestCacheAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnUpdateRequestCacheAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostUpdateRequestCacheAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostUpdateRequestCacheAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnLogRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnLogRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnPostLogRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnPostLogRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <apidata name="AddOnEndRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bh">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="eh">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <apidata name="AddOnEndRequestAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="beginHandler">
              <type api="T:System.Web.BeginEventHandler" ref="true" />
            </parameter>
            <parameter name="endHandler">
              <type api="T:System.Web.EndEventHandler" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.Init">
          <apidata name="Init" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <apidata name="GetVaryByCustomString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.HttpContext" ref="true" />
            </parameter>
            <parameter name="custom">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <apidata name="GetOutputCacheProviderName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.HttpContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Context">
          <apidata name="Context" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Context" />
          <returns>
            <type api="T:System.Web.HttpContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Events">
          <apidata name="Events" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Events" />
          <returns>
            <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Request" />
          <returns>
            <type api="T:System.Web.HttpRequest" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Response">
          <apidata name="Response" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Response" />
          <returns>
            <type api="T:System.Web.HttpResponse" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Session">
          <apidata name="Session" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Session" />
          <returns>
            <type api="T:System.Web.SessionState.HttpSessionState" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Application">
          <apidata name="Application" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Application" />
          <returns>
            <type api="T:System.Web.HttpApplicationState" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Server">
          <apidata name="Server" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Server" />
          <returns>
            <type api="T:System.Web.HttpServerUtility" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Modules">
          <apidata name="Modules" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Modules" />
          <returns>
            <type api="T:System.Web.HttpModuleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.HttpApplication.Site">
          <apidata name="Site" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Site" />
          <setter name="set_Site" />
          <returns>
            <type api="T:System.ComponentModel.ISite" ref="true" />
          </returns>
          <implements>
            <member api="P:System.ComponentModel.IComponent.Site">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.IComponent.Disposed">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.BeginRequest">
          <apidata name="BeginRequest" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_BeginRequest" />
          <remover name="remove_BeginRequest" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.AuthenticateRequest">
          <apidata name="AuthenticateRequest" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AuthenticateRequest" />
          <remover name="remove_AuthenticateRequest" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <apidata name="PostAuthenticateRequest" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostAuthenticateRequest" />
          <remover name="remove_PostAuthenticateRequest" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.AuthorizeRequest">
          <apidata name="AuthorizeRequest" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AuthorizeRequest" />
          <remover name="remove_AuthorizeRequest" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <apidata name="PostAuthorizeRequest" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostAuthorizeRequest" />
          <remover name="remove_PostAuthorizeRequest" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.ResolveRequestCache">
          <apidata name="ResolveRequestCache" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ResolveRequestCache" />
          <remover name="remove_ResolveRequestCache" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostResolveRequestCache">
          <apidata name="PostResolveRequestCache" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostResolveRequestCache" />
          <remover name="remove_PostResolveRequestCache" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.MapRequestHandler">
          <apidata name="MapRequestHandler" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MapRequestHandler" />
          <remover name="remove_MapRequestHandler" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostMapRequestHandler">
          <apidata name="PostMapRequestHandler" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostMapRequestHandler" />
          <remover name="remove_PostMapRequestHandler" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.AcquireRequestState">
          <apidata name="AcquireRequestState" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AcquireRequestState" />
          <remover name="remove_AcquireRequestState" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostAcquireRequestState">
          <apidata name="PostAcquireRequestState" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostAcquireRequestState" />
          <remover name="remove_PostAcquireRequestState" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <apidata name="PreRequestHandlerExecute" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreRequestHandlerExecute" />
          <remover name="remove_PreRequestHandlerExecute" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <apidata name="PostRequestHandlerExecute" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostRequestHandlerExecute" />
          <remover name="remove_PostRequestHandlerExecute" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.ReleaseRequestState">
          <apidata name="ReleaseRequestState" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ReleaseRequestState" />
          <remover name="remove_ReleaseRequestState" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostReleaseRequestState">
          <apidata name="PostReleaseRequestState" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostReleaseRequestState" />
          <remover name="remove_PostReleaseRequestState" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.UpdateRequestCache">
          <apidata name="UpdateRequestCache" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_UpdateRequestCache" />
          <remover name="remove_UpdateRequestCache" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <apidata name="PostUpdateRequestCache" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostUpdateRequestCache" />
          <remover name="remove_PostUpdateRequestCache" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.LogRequest">
          <apidata name="LogRequest" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LogRequest" />
          <remover name="remove_LogRequest" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PostLogRequest">
          <apidata name="PostLogRequest" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PostLogRequest" />
          <remover name="remove_PostLogRequest" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.EndRequest">
          <apidata name="EndRequest" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_EndRequest" />
          <remover name="remove_EndRequest" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.Error">
          <apidata name="Error" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Error" />
          <remover name="remove_Error" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <apidata name="PreSendRequestHeaders" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreSendRequestHeaders" />
          <remover name="remove_PreSendRequestHeaders" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="E:System.Web.HttpApplication.PreSendRequestContent">
          <apidata name="PreSendRequestContent" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreSendRequestContent" />
          <remover name="remove_PreSendRequestContent" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Web" module="System.Web" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web" />
            <type api="T:System.Web.HttpApplication" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.WebApiApplication.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.WebApiApplication" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.WebApiApplication.Application_Start">
      <apidata name="Application_Start" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.WebApiApplication" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.WebApiConfig">
      <apidata name="WebApiConfig" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.WebApiConfig.Register(System.Web.Http.HttpConfiguration)" />
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="config">
          <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api" />
        <type api="T:Microbrewit.Api.WebApiConfig" ref="true" />
      </containers>
    </api>
    <api id="N:Microbrewit.Api.Automapper">
      <apidata name="Microbrewit.Api.Automapper" group="namespace" />
      <elements>
        <element api="T:Microbrewit.Api.Automapper.BeerProfile" />
        <element api="T:Microbrewit.Api.Automapper.BeerStyleProfile" />
        <element api="T:Microbrewit.Api.Automapper.BoilStepProfile" />
        <element api="T:Microbrewit.Api.Automapper.BrewerProfile" />
        <element api="T:Microbrewit.Api.Automapper.BreweryProfile" />
        <element api="T:Microbrewit.Api.Automapper.FermentableProfile" />
        <element api="T:Microbrewit.Api.Automapper.FermentationStepProfile" />
        <element api="T:Microbrewit.Api.Automapper.MashStepProfile" />
        <element api="T:Microbrewit.Api.Automapper.OtherProfile" />
        <element api="T:Microbrewit.Api.Automapper.ResolveRecipeId`1" />
        <element api="T:Microbrewit.Api.Automapper.SupplierProfile" />
        <element api="T:Microbrewit.Api.Automapper.UserProfile" />
        <element api="T:Microbrewit.Api.Automapper.YeastsProfile" />
        <element api="T:Microbrewit.Api.Automapper.HopProfile" />
        <element api="T:Microbrewit.Api.Automapper.RecipeProfile" />
        <element api="T:Microbrewit.Api.Automapper.AutoMapperConfiguration" />
      </elements>
    </api>
    <api id="T:Microbrewit.Api.Automapper.AutoMapperConfiguration">
      <apidata name="AutoMapperConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.AutoMapperConfiguration.Configure" />
        <element api="M:Microbrewit.Api.Automapper.AutoMapperConfiguration.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.AutoMapperConfiguration.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.AutoMapperConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.AutoMapperConfiguration.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.AutoMapperConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.BeerProfile">
      <apidata name="BeerProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.BeerProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.BeerProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BeerProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BeerProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BeerProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BeerProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.BeerStyleProfile">
      <apidata name="BeerStyleProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.BeerStyleProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.BeerStyleProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BeerStyleProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BeerStyleProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BeerStyleProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BeerStyleProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.BoilStepProfile">
      <apidata name="BoilStepProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.BoilStepProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.BoilStepProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BoilStepProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BoilStepProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BoilStepProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BoilStepProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.BrewerProfile">
      <apidata name="BrewerProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.BrewerProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.BrewerProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BrewerProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BrewerProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BrewerProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BrewerProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.BreweryProfile">
      <apidata name="BreweryProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.BreweryProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.BreweryProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BreweryProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BreweryProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.BreweryProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.BreweryProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.FermentableProfile">
      <apidata name="FermentableProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.FermentableProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.FermentableProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.FermentableProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.FermentableProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.FermentableProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.FermentableProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.FermentationStepProfile">
      <apidata name="FermentationStepProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.FermentationStepProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.FermentationStepProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.FermentationStepProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.FermentationStepProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.FermentationStepProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.FermentationStepProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.HopProfile">
      <apidata name="HopProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.HopProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.HopProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.HopProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.HopProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.HopProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.HopProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.MashStepProfile">
      <apidata name="MashStepProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.MashStepProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.MashStepProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.MashStepProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.MashStepProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.MashStepProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.MashStepProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.OtherProfile">
      <apidata name="OtherProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.OtherProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.OtherProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.OtherProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.OtherProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.OtherProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.OtherProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.RecipeProfile">
      <apidata name="RecipeProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.RecipeProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.RecipeProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.RecipeProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.RecipeProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.RecipeProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.RecipeProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.ResolveRecipeId`1">
      <apidata name="ResolveRecipeId" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microbrewit.Api.Automapper.ResolveRecipeId`1" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.ResolveRecipeId`1.ResolveCore(`0)" />
        <element api="M:Microbrewit.Api.Automapper.ResolveRecipeId`1.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Microbrewit.Api.Automapper.ResolveRecipeId`1" />
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.ResolveRecipeId`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.ResolveRecipeId`1" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.ResolveRecipeId`1.ResolveCore(`0)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microbrewit.Api.Automapper.ResolveRecipeId`1" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <template name="T" index="0" api="T:Microbrewit.Api.Automapper.ResolveRecipeId`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.ResolveRecipeId`1" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.SupplierProfile">
      <apidata name="SupplierProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.SupplierProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.SupplierProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.SupplierProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.SupplierProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.SupplierProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.SupplierProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.UserProfile">
      <apidata name="UserProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.UserProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.UserProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.UserProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.UserProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.UserProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.UserProfile" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.YeastsProfile">
      <apidata name="YeastsProfile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.Profile" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.YeastsProfile.Configure" />
        <element api="M:Microbrewit.Api.Automapper.YeastsProfile.#ctor" />
        <element api="M:AutoMapper.Profile.DisableConstructorMapping">
          <apidata name="DisableConstructorMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
          <apidata name="IncludeSourceExtensionMethods" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="assembly">
              <type api="T:System.Reflection.Assembly" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.IncludeSourceExtensionMethods(System.Reflection.Assembly)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter``1">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression`1" ref="true">
              <specialization>
                <template name="TValueFormatter" index="0" api="M:AutoMapper.Profile.AddFormatter``1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(System.Type)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="valueFormatterType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IFormatterCtorExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(System.Type)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatter(AutoMapper.IValueFormatter)">
          <apidata name="AddFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatter">
              <type api="T:AutoMapper.IValueFormatter" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatter(AutoMapper.IValueFormatter)">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
          <apidata name="AddFormatExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="formatExpression">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:AutoMapper.ResolutionContext" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.SkipFormatter``1">
          <apidata name="SkipFormatter" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TValueFormatter">
              <constrained>
                <implements>
                  <type api="T:AutoMapper.IValueFormatter" ref="true" />
                </implements>
              </constrained>
            </template>
          </templates>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.SkipFormatter``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.ForSourceType``1">
          <apidata name="ForSourceType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IFormatterExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IFormatterExpression.ForSourceType``1">
              <type api="T:AutoMapper.IFormatterExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <templates>
            <template name="TSource" />
            <template name="TDestination" />
          </templates>
          <parameters>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression`2" ref="true">
              <specialization>
                <template name="TSource" index="0" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
                <template name="TDestination" index="1" api="M:AutoMapper.Profile.CreateMap``2(AutoMapper.MemberList)" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap``2(AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
          <apidata name="CreateMap" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="sourceType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="destinationType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberList">
              <type api="T:AutoMapper.MemberList" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.IMappingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeAlias(System.String,System.String)">
          <apidata name="RecognizeAlias" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="original">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="alias">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeAlias(System.String,System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePrefixes(System.String[])">
          <apidata name="RecognizePrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizePostfixes(System.String[])">
          <apidata name="RecognizePostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizePostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[])">
          <apidata name="RecognizeDestinationPrefixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="prefixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPrefixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[])">
          <apidata name="RecognizeDestinationPostfixes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="postfixes" params="true">
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.RecognizeDestinationPostfixes(System.String[])">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.AddGlobalIgnore(System.String)">
          <apidata name="AddGlobalIgnore" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="propertyNameStartingWith">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:AutoMapper.IProfileExpression.AddGlobalIgnore(System.String)">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:AutoMapper.Profile.Initialize(AutoMapper.ConfigurationStore)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configurator">
              <type api="T:AutoMapper.ConfigurationStore" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ProfileName">
          <apidata name="ProfileName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ProfileName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullDestinationValues">
          <apidata name="AllowNullDestinationValues" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullDestinationValues" />
          <setter name="set_AllowNullDestinationValues" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullDestinationValues">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.AllowNullCollections">
          <apidata name="AllowNullCollections" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowNullCollections" />
          <setter name="set_AllowNullCollections" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IProfileExpression.AllowNullCollections">
              <type api="T:AutoMapper.IProfileExpression" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceMemberNamingConvention">
          <apidata name="SourceMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_SourceMemberNamingConvention" />
          <setter name="set_SourceMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationMemberNamingConvention">
          <apidata name="DestinationMemberNamingConvention" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DestinationMemberNamingConvention" />
          <setter name="set_DestinationMemberNamingConvention" />
          <returns>
            <type api="T:AutoMapper.INamingConvention" ref="true" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationMemberNamingConvention">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Prefixes">
          <apidata name="Prefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Prefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Prefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Postfixes">
          <apidata name="Postfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Postfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Postfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPrefixes">
          <apidata name="DestinationPrefixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPrefixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPrefixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DestinationPostfixes">
          <apidata name="DestinationPostfixes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DestinationPostfixes" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DestinationPostfixes">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.Aliases">
          <apidata name="Aliases" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Aliases" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:AutoMapper.AliasedMember" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.Aliases">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.ConstructorMappingEnabled">
          <apidata name="ConstructorMappingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ConstructorMappingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.ConstructorMappingEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.DataReaderMapperYieldReturnEnabled">
          <apidata name="DataReaderMapperYieldReturnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DataReaderMapperYieldReturnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.DataReaderMapperYieldReturnEnabled">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="P:AutoMapper.Profile.SourceExtensionMethods">
          <apidata name="SourceExtensionMethods" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_SourceExtensionMethods" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:AutoMapper.IMappingOptions.SourceExtensionMethods">
              <type api="T:AutoMapper.IMappingOptions" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.Profile" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.YeastsProfile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.YeastsProfile" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.YeastsProfile.Configure">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.Profile.Configure">
          <type api="T:AutoMapper.Profile" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper" />
        <type api="T:Microbrewit.Api.Automapper.YeastsProfile" ref="true" />
      </containers>
    </api>
    <api id="N:Microbrewit.Api.Automapper.CustomResolvers">
      <apidata name="Microbrewit.Api.Automapper.CustomResolvers" group="namespace" />
      <elements>
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerBrewerResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleLinksResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeBoilStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeFermentationStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableFermentationStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableBoilStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableMashStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableSupplierResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.HopFermentationStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeMashStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.YeastFermentationStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherFermentationStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherBoilStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherMashStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.HopMashStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.HopFlavoursResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.HopPostOriginResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.HopBoilStepResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.SetHopFromNullResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.SubBeerStyleResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.SubstitutResolver" />
        <element api="T:Microbrewit.Api.Automapper.CustomResolvers.YeastSupplierResolver" />
      </elements>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.BeerBrewerResolver">
      <apidata name="BeerBrewerResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.BeerDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.UserBeer" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.BeerBrewerResolver.ResolveCore(Microbrewit.Model.DTOs.BeerDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.BeerBrewerResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.BeerDto" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.UserBeer" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.BeerBrewerResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerBrewerResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.BeerBrewerResolver.ResolveCore(Microbrewit.Model.DTOs.BeerDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.BeerDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.UserBeer" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="beer">
          <type api="T:Microbrewit.Model.DTOs.BeerDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.UserBeer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerBrewerResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleLinksResolver">
      <apidata name="BeerStyleLinksResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BeerStyle" ref="true" />
              <type api="T:Microbrewit.Model.DTOs.BeerStyleLinks" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleLinksResolver.ResolveCore(Microbrewit.Model.BeerStyle)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleLinksResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.BeerStyle" ref="true" />
                <type api="T:Microbrewit.Model.DTOs.BeerStyleLinks" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleLinksResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleLinksResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleLinksResolver.ResolveCore(Microbrewit.Model.BeerStyle)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BeerStyle" ref="true" />
              <type api="T:Microbrewit.Model.DTOs.BeerStyleLinks" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="beerStyle">
          <type api="T:Microbrewit.Model.BeerStyle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microbrewit.Model.DTOs.BeerStyleLinks" ref="true" />
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleLinksResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleResolver">
      <apidata name="BeerStyleResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.Beer" ref="true" />
              <type api="T:Microbrewit.Model.DTOs.DTO" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleResolver.ResolveCore(Microbrewit.Model.Beer)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.Beer" ref="true" />
                <type api="T:Microbrewit.Model.DTOs.DTO" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleResolver.ResolveCore(Microbrewit.Model.Beer)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.Beer" ref="true" />
              <type api="T:Microbrewit.Model.DTOs.DTO" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="beer">
          <type api="T:Microbrewit.Model.Beer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microbrewit.Model.DTOs.DTO" ref="true" />
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.BeerStyleResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableBoilStepResolver">
      <apidata name="FermentableBoilStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BoilStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableBoilStepResolver.ResolveCore(Microbrewit.Model.BoilStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableBoilStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.BoilStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableBoilStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableBoilStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableBoilStepResolver.ResolveCore(Microbrewit.Model.BoilStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BoilStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.BoilStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableBoilStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableFermentationStepResolver">
      <apidata name="FermentableFermentationStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableFermentationStepResolver.ResolveCore(Microbrewit.Model.FermentationStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableFermentationStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableFermentationStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableFermentationStepResolver.ResolveCore(Microbrewit.Model.FermentationStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableMashStepResolver">
      <apidata name="FermentableMashStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.MashStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableMashStepResolver.ResolveCore(Microbrewit.Model.MashStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableMashStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.MashStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableMashStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableMashStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableMashStepResolver.ResolveCore(Microbrewit.Model.MashStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.MashStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.MashStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.FermentableStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableMashStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableSupplierResolver">
      <apidata name="FermentableSupplierResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.FermentableDto" ref="true" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableSupplierResolver.ResolveCore(Microbrewit.Model.DTOs.FermentableDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableSupplierResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.FermentableDto" ref="true" />
                <type api="T:System.Nullable`1" ref="false">
                  <specialization>
                    <type api="T:System.Int32" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableSupplierResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableSupplierResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.FermentableSupplierResolver.ResolveCore(Microbrewit.Model.DTOs.FermentableDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.FermentableDto" ref="true" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:Microbrewit.Model.DTOs.FermentableDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.FermentableSupplierResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.HopBoilStepResolver">
      <apidata name="HopBoilStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BoilStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopBoilStepResolver.ResolveCore(Microbrewit.Model.BoilStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopBoilStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.BoilStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopBoilStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopBoilStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopBoilStepResolver.ResolveCore(Microbrewit.Model.BoilStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BoilStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.BoilStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopBoilStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.HopFermentationStepResolver">
      <apidata name="HopFermentationStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopFermentationStepResolver.ResolveCore(Microbrewit.Model.FermentationStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopFermentationStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopFermentationStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopFermentationStepResolver.ResolveCore(Microbrewit.Model.FermentationStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.HopFlavoursResolver">
      <apidata name="HopFlavoursResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.HopFlavour" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopFlavoursResolver.ResolveCore(Microbrewit.Model.DTOs.HopDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopFlavoursResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.HopFlavour" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopFlavoursResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopFlavoursResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopFlavoursResolver.ResolveCore(Microbrewit.Model.DTOs.HopDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.HopFlavour" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="dto">
          <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.HopFlavour" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopFlavoursResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.HopMashStepResolver">
      <apidata name="HopMashStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.MashStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopMashStepResolver.ResolveCore(Microbrewit.Model.MashStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopMashStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.MashStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopMashStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopMashStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopMashStepResolver.ResolveCore(Microbrewit.Model.MashStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.MashStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.MashStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopMashStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.HopPostOriginResolver">
      <apidata name="HopPostOriginResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopPostOriginResolver.ResolveCore(Microbrewit.Model.DTOs.HopDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.HopPostOriginResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopPostOriginResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopPostOriginResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.HopPostOriginResolver.ResolveCore(Microbrewit.Model.DTOs.HopDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="dto">
          <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.HopPostOriginResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.OtherBoilStepResolver">
      <apidata name="OtherBoilStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BoilStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.OtherBoilStepResolver.ResolveCore(Microbrewit.Model.BoilStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.OtherBoilStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.BoilStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.OtherBoilStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherBoilStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.OtherBoilStepResolver.ResolveCore(Microbrewit.Model.BoilStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BoilStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.BoilStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherBoilStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.OtherFermentationStepResolver">
      <apidata name="OtherFermentationStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.OtherFermentationStepResolver.ResolveCore(Microbrewit.Model.FermentationStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.OtherFermentationStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.OtherFermentationStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.OtherFermentationStepResolver.ResolveCore(Microbrewit.Model.FermentationStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.OtherMashStepResolver">
      <apidata name="OtherMashStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.MashStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.OtherMashStepResolver.ResolveCore(Microbrewit.Model.MashStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.OtherMashStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.MashStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.OtherMashStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherMashStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.OtherMashStepResolver.ResolveCore(Microbrewit.Model.MashStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.MashStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.MashStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.OtherStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.OtherMashStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeBoilStepResolver">
      <apidata name="RecipeBoilStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.BoilStep" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeBoilStepResolver.ResolveCore(Microbrewit.Model.DTOs.RecipeDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeBoilStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.BoilStep" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeBoilStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeBoilStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeBoilStepResolver.ResolveCore(Microbrewit.Model.DTOs.RecipeDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.BoilStep" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="recipe">
          <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.BoilStep" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeBoilStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeFermentationStepResolver">
      <apidata name="RecipeFermentationStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeFermentationStepResolver.ResolveCore(Microbrewit.Model.DTOs.RecipeDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeFermentationStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeFermentationStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeFermentationStepResolver.ResolveCore(Microbrewit.Model.DTOs.RecipeDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="recipe">
          <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeMashStepResolver">
      <apidata name="RecipeMashStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.MashStep" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeMashStepResolver.ResolveCore(Microbrewit.Model.DTOs.RecipeDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeMashStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.MashStep" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeMashStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeMashStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.RecipeMashStepResolver.ResolveCore(Microbrewit.Model.DTOs.RecipeDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.MashStep" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="recipe">
          <type api="T:Microbrewit.Model.DTOs.RecipeDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.MashStep" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.RecipeMashStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.SetHopFromNullResolver">
      <apidata name="SetHopFromNullResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
              <type api="T:Microbrewit.Model.HopForm" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.SetHopFromNullResolver.ResolveCore(Microbrewit.Model.DTOs.HopStepDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.SetHopFromNullResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
                <type api="T:Microbrewit.Model.HopForm" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.SetHopFromNullResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.SetHopFromNullResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.SetHopFromNullResolver.ResolveCore(Microbrewit.Model.DTOs.HopStepDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
              <type api="T:Microbrewit.Model.HopForm" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:Microbrewit.Model.DTOs.HopStepDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microbrewit.Model.HopForm" ref="true" />
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.SetHopFromNullResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.SubBeerStyleResolver">
      <apidata name="SubBeerStyleResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BeerStyle" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.SubBeerStyleResolver.ResolveCore(Microbrewit.Model.BeerStyle)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.SubBeerStyleResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.BeerStyle" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.SubBeerStyleResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.SubBeerStyleResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.SubBeerStyleResolver.ResolveCore(Microbrewit.Model.BeerStyle)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.BeerStyle" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="BeerStyle">
          <type api="T:Microbrewit.Model.BeerStyle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.SubBeerStyleResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.SubstitutResolver">
      <apidata name="SubstitutResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.Hop" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.SubstitutResolver.ResolveCore(Microbrewit.Model.DTOs.HopDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.SubstitutResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.Hop" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.SubstitutResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.SubstitutResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.SubstitutResolver.ResolveCore(Microbrewit.Model.DTOs.HopDto)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.Hop" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="dto">
          <type api="T:Microbrewit.Model.DTOs.HopDto" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.Hop" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.SubstitutResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.YeastFermentationStepResolver">
      <apidata name="YeastFermentationStepResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.YeastStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.YeastFermentationStepResolver.ResolveCore(Microbrewit.Model.FermentationStep)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.YeastFermentationStepResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
                <type api="T:System.Collections.Generic.IList`1" ref="true">
                  <specialization>
                    <type api="T:Microbrewit.Model.DTOs.YeastStepDto" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.YeastFermentationStepResolver.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.YeastFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="M:Microbrewit.Api.Automapper.CustomResolvers.YeastFermentationStepResolver.ResolveCore(Microbrewit.Model.FermentationStep)">
      <apidata name="ResolveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AutoMapper.ValueResolver`2.ResolveCore(`0)">
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:Microbrewit.Model.DTOs.YeastStepDto" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="step">
          <type api="T:Microbrewit.Model.FermentationStep" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Microbrewit.Model.DTOs.YeastStepDto" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microbrewit.Api" module="Microbrewit.Api" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Microbrewit.Api.Automapper.CustomResolvers" />
        <type api="T:Microbrewit.Api.Automapper.CustomResolvers.YeastFermentationStepResolver" ref="true" />
      </containers>
    </api>
    <api id="T:Microbrewit.Api.Automapper.CustomResolvers.YeastSupplierResolver">
      <apidata name="YeastSupplierResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AutoMapper.ValueResolver`2" ref="true">
            <specialization>
              <type api="T:Microbrewit.Model.DTOs.YeastDto" ref="true" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.YeastSupplierResolver.ResolveCore(Microbrewit.Model.DTOs.YeastDto)" />
        <element api="M:Microbrewit.Api.Automapper.CustomResolvers.YeastSupplierResolver.#ctor" />
        <element api="M:AutoMapper.ValueResolver`2.Resolve(AutoMapper.ResolutionResult)">
          <apidata name="Resolve" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="source">
              <type api="T:AutoMapper.ResolutionResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:AutoMapper.ResolutionResult" ref="true" />
          </returns>
          <implements>
            <member api="M:AutoMapper.IValueResolver.Resolve(AutoMapper.ResolutionResult)">
              <type api="T:AutoMapper.IValueResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="AutoMapper" module="AutoMapper" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:AutoMapper" />
            <type api="T:AutoMapper.ValueResolver`2" ref="true">
              <specialization>
                <type api="T:Microbrewit.Model.DTOs.YeastDto" ref="true" />
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
 